/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java'
    id 'application'
    id 'maven-publish'
	id 'com.github.johnrengelman.shadow' version '7.1.2'
	id 'edu.sc.seis.launch4j' version '2.5.1'
	id 'com.github.spotbugs' version '5.0.14'
	id 'jacoco'
}

compileJava.options.encoding = 'UTF-8'
sourceCompatibility = 1.8
javadoc.options.memberLevel = JavadocMemberLevel.PRIVATE
group = 'dev.ssalhub.lskv'
mainClassName = 'dev.ssalhub.lskv.Main'
version = "1.3.0-256"
if(version.matches("v\\d+\\.\\d+")){
	version = version.substring(1)
}

sourceSets{
	main {
		java.srcDirs = ['src']
		resources.srcDirs = ['resources']
	}

    // test{
	// 	java.srcDirs = ['test']
	// 	resources.srcDirs = ['test']
	// }
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
	//Util
	implementation 'dev.roanh.util:util:2.5'
	
	//JNativeHook
	implementation 'com.github.kwhat:jnativehook:2.2.2'

    // for testing
    // Use JUnit Jupiter.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
	testImplementation(platform('org.junit:junit-bom:5.10.0'))
	testImplementation 'org.junit.jupiter:junit-jupiter'
    // This dependency is used by the application.
    // implementation 'com.google.guava:guava:31.1-jre'
}

test{
	useJUnitPlatform()
	dependsOn 'cleanTest'

	testLogging{
		events "passed", "skipped", "failed"
	}
}


//////////////////////////////////////////////////////////


ext.artifact = 'lostsagakeysviewer'
shadowJar.archiveBaseName.set('LostSagaKeysViewer-v' + version + '.jar')

spotbugs {
	showProgress = true
	effort = 'max'
	reportLevel = 'low'
	excludeFilter = file("$rootDir/exclude.xml")
}

tasks.withType(com.github.spotbugs.snom.SpotBugsTask) {
	reports {
		html {
			required = true
			outputLocation = file("$buildDir/reports/spotbugs/main/spotbugs.html")
			stylesheet = 'fancy-hist.xsl'
		}
	}
}

publishing {
	publications{
		mavenJava(MavenPublication){
			from components.java
			artifactId = project.artifact

			pom{
				name = rootProject.name
				description = 'Program to measure the keys pressed on keyboard, original project by RoanH'
				url = 'https://github.com/SsalHub/LostSagaKeysViewer'
				licenses{
					license{
						name = 'GNU General Public License v3.0'
						url = 'https://www.gnu.org/licenses/gpl-3.0.txt'
					}
				}
				developers{
					developer{
						id = 'SsalHub'
						name = 'Song JaeUk'
						email = 'sjw000324@gmail.com'
					}
				}
				// scm{
				// 	connection = 'scm:git:git@github.com:RoanH/KeysPerSecond.git'
				// 	developerConnection = 'scm:git:git@git.roanh.dev:roan/KeysPerSecond.git'
				// 	url = 'https://github.com/RoanH/KeysPerSecond'
				// }
			}
		}
	}
}

shadowJar {
	into("META-INF/maven/$project.group/$project.artifact") {
		from {
			generatePomFileForMavenJavaPublication
		}
		rename ".*", "pom.xml"
	}
}

launch4j {
	jarTask = project.tasks.shadowJar
	mainClassName = mainClassName
	icon = "${projectDir}/kiv.ico"
	jreMinVersion = project.sourceCompatibility
	bundledJrePath = "%JAVA_HOME%"
	outfile = rootProject.name + '-v' + project.version + '.exe'
	fileDescription = "LostSagaKeysViewer"
	productName = rootProject.name
	version = project.version
	textVersion = project.version
	copyright = "Gomsong"
}
